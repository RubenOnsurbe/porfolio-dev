---
import GitHub from "../icons/Github.astro";
import CSS from "../icons/Css.astro";
import TypeScript from "../icons/TypeScript.astro";
import HTML from "../icons/Html.astro";
import PHP from "../icons/Php.astro";
import Laravel from "../icons/Laravel.astro";
import Angular from "../icons/Angular.astro";
import JavaScript from "../icons/JavaScript.astro";
import MySQL from "../icons/Mysql.astro";
import Link from "../icons/Link.astro";
import LinkButton from "./LinkButton.astro";
import AstroIcon from "../icons/AstroIcon.astro";
import TailwindCSS from "../icons/TailwindCSS.astro";
import React from "../icons/React.astro";
import Supabase from "../icons/Supabase.astro";
import Turso from "../icons/Turso.astro";
import Document from "../icons/Document.astro";
import NodeJS from "../icons/NodeJS.astro";

const TAGS = {
    TYPESCRIPT: {
        name: "TypeScript",
        class: "bg-blue-600 text-white",
        icon: TypeScript,
    },
    REACT: {
        name: "React",
        class: "bg-blue-900 text-white",
        icon: React,
    },
    JS: {
        name: "JavaScript",
        class: "bg-yellow-600 text-white",
        icon: JavaScript,
    },
    HTML: {
        name: "HTML",
        class: "bg-red-400 text-white",
        icon: HTML,
    },
    CSS: {
        name: "CSS",
        class: "bg-blue-800 text-white",
        icon: CSS,
    },
    LARAVEL: {
        name: "Laravel",
        class: "bg-red-300 text-white",
        icon: Laravel,
    },
    ANGULAR: {
        name: "Angular",
        class: "bg-violet-900 text-white",
        icon: Angular,
    },
    PHP: {
        name: "PHP",
        class: "bg-blue-800 text-white",
        icon: PHP,
    },
    MYSQL: {
        name: "MySQL",
        class: "bg-blue-300 text-white",
        icon: MySQL,
    },
    ASTRO: {
        name: "Astro",
        class: "bg-orange-800 text-white",
        icon: AstroIcon,
    },
    TAILWINDCSS: {
        name: "TailwindCSS",
        class: "bg-blue-900 text-white",
        icon: TailwindCSS,
    },
    SUPABASE: {
        name: "Supabase",
        class: "bg-blue-900 text-white",
        icon: Supabase,
    },
    TURSO: {
        name: "Turso",
        class: "bg-blue-900 text-white",
        icon: Turso,
    },
    NODEJS: {
        name: "NodeJS",
        class: "bg-green-800 text-white",
        icon: NodeJS,
    },
};
const PROJECTS = [
    {
        title: "TFG | Gestion de Clubes Deportivos",
        description:
            "Apliacación web para la gestión de clubes deportivos. Permite la gestión de juagadores, entrenadores, actividades, etc.",
        image: "/projects/tfg.webp",
        link: "https://sport-team-creator-front.vercel.app/",
        front: "https://github.com/RubenOnsurbe/SportTeamCreator_Front",
        back: "https://github.com/RubenOnsurbe/SportsTeamCreator-Back",
        documentation: "/documents/TFG.pdf",
        tags: [
            TAGS.LARAVEL,
            TAGS.ANGULAR,
            TAGS.TYPESCRIPT,
            TAGS.HTML,
            TAGS.CSS,
            TAGS.MYSQL,
            TAGS.PHP,
        ],
    },
    {
        title: "En progreso | Clon Spotify",
        description:
            "Clon de la web de Spotify con React y TailwindCSS. En progreso...",
        image: "/projects/spotify.webp",
        link: "https://spotify-clon-rdev.vercel.app/",
        github: "https://github.com/RubenOnsurbe/spotify-clon",
        tags: [TAGS.ASTRO, TAGS.TAILWINDCSS, TAGS.REACT],
    },
    {
        title: "En progreso | InToJobs",
        description: "Web para la gestion de trabajos. En progreso...",
        image: "/projects/intojobs.webp",
        link: "https://intojobs.vercel.app/",
        tags: [TAGS.ASTRO, TAGS.CSS, TAGS.JS, TAGS.SUPABASE],
    },
    {
        title: "En progreso | travelAgenda",
        description: "Web para la gestión de viajes. En progreso...",
        image: "/projects/travelAgenda.webp",
        link: "https://travelagenda.vercel.app/",
        tags: [TAGS.ASTRO, TAGS.CSS, TAGS.JS, TAGS.SUPABASE],
    },
    {
        title: "Traductor",
        description: "Traductor de texto. Desarrollado con React y TypeScript.",
        image: "/projects/traductor.webp",
        link: "https://traductor-ruben.vercel.app/",
        github: "https://github.com/RubenOnsurbe/translator-ruben",
        tags: [TAGS.REACT, TAGS.TYPESCRIPT],
    },
    {
        title: "En progreso | Chat Ruben",
        description: "Web de mensajería. En progreso...",
        image: "/projects/mensajeria.webp",
        link: "https://chat-ruben.vercel.app/",
        github: "https://github.com/RubenOnsurbe/chat-tiempo-real",
        tags: [TAGS.HTML, TAGS.CSS, TAGS.JS, TAGS.TURSO, TAGS.NODEJS],
    },
];
---

<div class="flex flex-col gap-y-16">
    {
        PROJECTS.map(
            ({
                image,
                title,
                description,
                tags,
                link,
                github,
                front,
                back,
                documentation,
            }) => (
                <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
                    <div class="w-full md:w-1/2">
                        <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
                            <img
                                alt={`Foto del proyecto: ${title}`}
                                class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105"
                                loading="lazy"
                                src={image}
                            />
                        </div>
                    </div>

                    <div class="w-full md:w-1/2 md:max-w-lg">
                        <h3 class="text-2xl font-bold text-gray-100">
                            {title}
                        </h3>
                        <div class="flex flex-wrap mt-2">
                            <ul class="flex flex-wrap gap-2">
                                {tags.map((tag) => (
                                    <li>
                                        <span
                                            class={`flex items-center gap-2 rounded-full text-xs ${tag.class} py-1 px-2 hover:scale-110 transition duration-300 ease-in-out`}
                                        >
                                            <tag.icon class="size-4" />
                                            {tag.name}
                                        </span>
                                    </li>
                                ))}
                            </ul>

                            <div class="mt-2 text-gray-400">{description}</div>
                            <footer class="flex flex-wrap gap-2 justify-start mt-4 gap-x-4">
                                {front && (
                                    <LinkButton href={front}>
                                        <GitHub class="size-6" />
                                        Front
                                    </LinkButton>
                                )}
                                {back && (
                                    <LinkButton href={back}>
                                        <GitHub class="size-6" />
                                        Back
                                    </LinkButton>
                                )}
                                {github && (
                                    <LinkButton href={github}>
                                        <GitHub class="size-6" />
                                        Code
                                    </LinkButton>
                                )}
                                {link && (
                                    <LinkButton href={link}>
                                        <Link class="size-4" />
                                        Preview
                                    </LinkButton>
                                )}
                                {documentation && (
                                    <LinkButton href={documentation}>
                                        <Document class="size-4" />
                                        Documentacion
                                    </LinkButton>
                                )}
                            </footer>
                        </div>
                    </div>
                </article>
            ),
        )
    }
</div>
