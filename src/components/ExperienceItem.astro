---
export interface Props {
    title: string;
    description: string | (string | { title: string; items: string[] })[];
    description2?: string;
    link?: string;
    carta?: string;
    date: string;
}

const { title, description, description2, link, date, carta } = Astro.props;
const isArray = Array.isArray(description);
---

<div
    class="absolute w-3 h-3 rounded-full mt-1.5 -start-1.5 border border-gray-900 bg-gray-700"
>
</div>
<time class="mb-1 text-sm font-normal leading-none text-sky-200/80">{date}</time
>
<h3 class="text-lg font-semibold text-yellow-200 mt-2">{title}</h3>

{
    isArray ? (
        <ul class="mb-4 text-base font-normal text-gray-200 list-disc list-inside">
            {(
                description as (string | { title: string; items: string[] })[]
            ).map((item) =>
                typeof item === "string" ? (
                    <p>{item}</p>
                ) : (
                    <li>
                        {item.title}
                        <ul class="list-none ml-5 mt-1">
                            {item.items.map((subitem) => (
                                <li>ðŸ”¹ {subitem}</li>
                            ))}
                        </ul>
                    </li>
                ),
            )}
        </ul>
    ) : (
        <p class="mb-4 text-base font-normal text-gray-200 text-pretty">
            {description}
        </p>
    )
}
{
    description2 && (
        <p class="mb-4 text-base font-normal text-gray-200 text-pretty">
            {description2}
        </p>
    )
}
{
    link && (
        <a
            href={link}
            target="_blank"
            rel="noopener"
            class="inline-flex items-center px-4 py-2 text-sm font-medium border rounded-lg focus:z-10 focus:ring-4 focus:outline-none focus:text-blue-700 bg-gray-800 text-gray-400 border-gray-600 hover:text-white hover:bg-gray-700 focus:ring-gray-700"
        >
            Saber mÃ¡s
            <svg
                class="w-3 h-3 ms-2 rtl:rotate-180"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 14 10"
            >
                <path
                    stroke="currentColor"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M1 5h12m0 0L9 1m4 4L9 9"
                />
            </svg>
        </a>
    )
}

{
    carta && (
        <a
            href={carta}
            target="_blank"
            rel="noopener"
            class="ml-2 inline-flex items-center px-4 py-2 text-sm font-medium border rounded-lg focus:z-10 focus:ring-4 focus:outline-none focus:text-blue-700 bg-gray-800 text-gray-400 border-gray-600 hover:text-white hover:bg-gray-700 focus:ring-gray-700"
        >
            Carta
            <svg
                class="w-3 h-3 ms-2 rtl:rotate-180"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 14 10"
            >
                <path
                    stroke="currentColor"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M1 5h12m0 0L9 1m4 4L9 9"
                />
            </svg>
        </a>
    )
}
